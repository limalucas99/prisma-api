nest new prisma-api

npm i --save @nestjs/core @nestjs/common rxjs reflect-metadata @nestjs/config

Instalar extensões - editorConfig, ESLint e Prettier

chmod +x .docker/entrypoint.sh -> dar permissão para o script ser executado

sudo chmod 777 prisma-api/

incluir:

    "include": [
        "src"
    ],
    "exclude": [
        "node_modules",
        "build",
        "dist",
        ".docker"
    ]

no arquivo tsconfig.json

SEMPRE deletar o node_modules antes de rodar os containers
SEMPRE deletar o package-lock.json antes de rodar os containers

find prisma-api/ -type d -exec chmod 777 {} \; -> dar permissão de escrita para todos as pastas do projeto

find prisma-api/ -type f -exec chmod 777 {} \; -> dar permissão de escrita para todos os arquivos do projeto

sudo chmod -R 777 prisma-api/ -> dar permissão de escrita para todos os arquivos do projeto  (Só funciona no primeiro nível)

docker-compose up -d  -> sobe o docker sem lockar o terminal

docker-compose exec app sh -> entrar dentro do container, nesse caso é "sh" e não "bash" por que foi definido na primeira linha do entrypoint.sh #!/bin/sh

npx prisma init

npx prisma migrate dev --name init -> cria os arquivos de migração de acordo com o provider utilizado

git rm --cached package-lock.json -> remove o package-lock.json do controle de versão (Somente assim o git passa a ignorá-lo)

npm i class-validator class-transformer

A ideia de usar repository é que caso você queira trocar de Query Builder, somente vai modificar o arquivo repository

findUnique do Prisma -> Só deixa filtrar por campos que sejam únicos. Ex: id/email/etc

npx prisma studio -> Abre o Prisma Studio no browser

Por padrão, os parâmetros de uma requisição chegam ao servidor como string

After you change your data model, you'll need to manually re-generate Prisma Client to ensure the code inside node_modules/.prisma/client gets updated:

npx prisma generate

Exception Filter -> Captura toda exceção que não é tratada pelo dev

nest g filter common/filters/http-exception --no-spec

npx nest g res posts
